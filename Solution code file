class Solution {
public:
    vector<int> result;
    
    int countDigit(int num)
    {
        int count;
        while(num>0)
        {
            num/=10;
            count++;
        }
        return count;
    }
    
    void findNumber(int num,int n,int k)
    {
        if(countDigit(num)==n)
        {
            result.push_back(num);
            return;
        }
        else
        {
            int lastDigit = num%10;
            for(int i=0;i<=9;i++)
            {
                if(abs(lastDigit - i)==k)
                {
                    int number=(num*10)+i;
                    findNumber(number,n,k);
                }
            }
            
        }
    }
    vector<int> numsSameConsecDiff(int n, int k) {
        
        for(int i=1;i<=9;i++)
        {
            findNumber(i,n,k);
        }
        return result;
    }
};
